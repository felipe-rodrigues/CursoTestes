// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinhaLojaExpress.Infra.Contexto;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MinhaLojaExpress.Infra.Migrations
{
    [DbContext(typeof(MinhaLojaExpressContext))]
    [Migration("20250828141843_SetupSeed")]
    partial class SetupSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DescontoItem", b =>
                {
                    b.Property<Guid>("DescontoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.HasKey("DescontoId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("DescontoItem");
                });

            modelBuilder.Entity("MinhaLojaExpress.Dominio.Entidades.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("96bd4915-991d-46cb-8df9-401931d5b892"),
                            Email = "meuemail@gmail.com",
                            Nome = "Cliente1",
                            Telefone = "31 91111-1111"
                        });
                });

            modelBuilder.Entity("MinhaLojaExpress.Dominio.Entidades.Desconto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Descontos");
                });

            modelBuilder.Entity("MinhaLojaExpress.Dominio.Entidades.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.Property<long>("Quantidade")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Items", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("73c9129e-169f-4d24-8d90-c13e006381b4"),
                            Nome = "Item 1",
                            Preco = 10m,
                            Quantidade = 10L
                        });
                });

            modelBuilder.Entity("MinhaLojaExpress.Dominio.Entidades.ItemPedido", b =>
                {
                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uuid");

                    b.Property<long>("Quantidade")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("ItemId", "PedidoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("ItemsPedido", (string)null);
                });

            modelBuilder.Entity("MinhaLojaExpress.Dominio.Entidades.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("PedidoDesconto", b =>
                {
                    b.Property<Guid>("DescontoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uuid");

                    b.HasKey("DescontoId", "PedidoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidoDesconto");
                });

            modelBuilder.Entity("DescontoItem", b =>
                {
                    b.HasOne("MinhaLojaExpress.Dominio.Entidades.Desconto", null)
                        .WithMany()
                        .HasForeignKey("DescontoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinhaLojaExpress.Dominio.Entidades.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MinhaLojaExpress.Dominio.Entidades.ItemPedido", b =>
                {
                    b.HasOne("MinhaLojaExpress.Dominio.Entidades.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MinhaLojaExpress.Dominio.Entidades.Pedido", "Pedido")
                        .WithMany("Items")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("MinhaLojaExpress.Dominio.Entidades.Pedido", b =>
                {
                    b.HasOne("MinhaLojaExpress.Dominio.Entidades.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("PedidoDesconto", b =>
                {
                    b.HasOne("MinhaLojaExpress.Dominio.Entidades.Desconto", null)
                        .WithMany()
                        .HasForeignKey("DescontoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinhaLojaExpress.Dominio.Entidades.Pedido", null)
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MinhaLojaExpress.Dominio.Entidades.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("MinhaLojaExpress.Dominio.Entidades.Pedido", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
